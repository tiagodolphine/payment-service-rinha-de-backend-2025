services:
  payment-service-1:
    image: tiagodolphine/payment-service-quarkus:0.0.2
    environment:
      - PAYMENT_PROCESSOR_DEFAULT=payment-processor-default
      - PAYMENT_PROCESSOR_DEFAULT_PORT=8080
      - PAYMENT_PROCESSOR_FALLBACK=payment-processor-fallback
      - PAYMENT_PROCESSOR_FALLBACK_PORT=8080
      - CHUNK_SIZE=100
      - POLL_INTERVAL=300
      - PROCESSOR_RETRY_MAX=500
      - REDIS_HOST=redis
      - REDIS_MAX_POOL_SIZE=150
      - QUARKUS_VERTX_EVENT_LOOPS_POOL_SIZE=1
      - QUARKUS_HTTP_IO_THREADS=1
      - QUARKUS_VERTX_INTERNAL_BLOCKING_POOL_SIZE=1
      - QUARKUS_LOG_LEVEL=OFF
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: "120MB"
    depends_on:
      redis:
        condition: service_healthy

  payment-service-2:
    image: tiagodolphine/payment-service-quarkus:0.0.2
    environment:
      - PAYMENT_PROCESSOR_DEFAULT=payment-processor-default
      - PAYMENT_PROCESSOR_DEFAULT_PORT=8080
      - PAYMENT_PROCESSOR_FALLBACK=payment-processor-fallback
      - PAYMENT_PROCESSOR_FALLBACK_PORT=8080
      - CHUNK_SIZE=100
      - POLL_INTERVAL=288
      - PROCESSOR_RETRY_MAX=500
      - REDIS_HOST=redis
      - REDIS_MAX_POOL_SIZE=150
      - QUARKUS_VERTX_EVENT_LOOPS_POOL_SIZE=2
      - QUARKUS_HTTP_IO_THREADS=1
      - QUARKUS_VERTX_INTERNAL_BLOCKING_POOL_SIZE=1
      - QUARKUS_LOG_LEVEL=OFF
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: "120MB"
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:8.2-rc1-alpine
    container_name: redis
    command: ["redis-server", "--save", "", "--appendonly", "no", "--maxclients", "1000"]
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: "70MB"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 10

  haproxy:
    image: haproxy
    container_name: haproxy-lb
    volumes:
      - ./haproxy:/usr/local/etc/haproxy:ro
    ports:
      - "9999:9999"
    depends_on:
      - payment-service-1
      - payment-service-2
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: "40MB"
    networks:
      - backend

#  openresty:
#    image: openresty/openresty:1.21.4.1-0-alpine
#    container_name: openresty
#    ports:
#      - "9999:9999"
#    depends_on:
#      - payment-service-1
#      - payment-service-2
#    volumes:
#      - ./nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
#      - ./nginx/nginx_ss.lua:/usr/local/openresty/nginx/nginx_ss.lua:ro
#    networks:
#      - backend
#    deploy:
#      resources:
#        limits:
#          cpus: '0.2'
#          memory: "40MB"


networks:
  backend:
    driver: bridge
  payment-processor:
    external: true